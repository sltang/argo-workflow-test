apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: pull-build-test
  generateName: pull-build-test- 
  namespace: argo-test
spec:
  entrypoint: pull-build-test
  # need it for pull-build. for deployments, specify volumes explicitly
  volumes:
  - name: build-pv
    persistentVolumeClaim:
      claimName: build-pv-claim

  templates:
  - name: pull-build-test
    steps:
    - - name: pull-build
        template: pull-build
    - - name: integration-test-service
        template: integration-test-service
      - name: integration-test-deployment
        template: integration-test-deployment
    - - name: myapp-service
        template: myapp-service
      - name: myapp-deployment
        template: myapp-deployment

  - name: integration-test-deployment
    resource:
      action: apply
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: integration-test
          namespace: argo-test
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          selector:
            matchLabels: &labels
              app: integration-test
          template:
            metadata:
              labels: *labels
            spec:
              containers:
                - image: myregistry.com/integration-test@sha256:1adc08ac2d86200a8a477277ec7f7a20279fcdee6c7b5adf3522fdb448596821 # change it to your own registry
                  name: integration-test
                  imagePullPolicy: IfNotPresent
                  resources: # limit the resources
                    limits:
                      memory: 1024Mi
                      cpu: 200m
                  env:
                    - name: POD_NAMESPACE
                      valueFrom: 
                        fieldRef: 
                          fieldPath: metadata.namespace
                    - name: WORKFLOW_NAME
                      value: "{{workflow.name}}"
                  volumeMounts:
                  - name: build-pv
                    mountPath: /mnt/data
              volumes:
              - name: build-pv
                persistentVolumeClaim:
                  claimName: build-pv-claim
              imagePullSecrets: #registry credentials
                - name: regcred

  - name: myapp-deployment
    resource:
      action: apply
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: myapp
          namespace: argo-test
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          selector:
            matchLabels: &labels
              app: myapp
          template:
            metadata:
              labels: *labels
            spec:
              containers:
                - image: myregistry.com/myapp@sha256:78010e3a7673023b3cc46c40663350f0a2dfd66f9f777bc012accb2f4fb1a364 # change it to your own registry
                  name: myapp
                  imagePullPolicy: IfNotPresent
                  resources: 
                    limits:
                      memory: 512Mi
                      cpu: 400m
                  env:
                    - name: POD_IP
                      valueFrom: 
                        fieldRef: 
                          fieldPath: status.podIP
                  volumeMounts: 
                  - name: build-pv
                    mountPath: /mnt/data
              volumes:
              - name: build-pv
                persistentVolumeClaim:
                  claimName: build-pv-claim
              imagePullSecrets:
                - name: regcred

  - name: pull-build
    container:
      image: myregistry.com/pull-build@sha256:f032691f419288006dcce5991fe8d55bf4cf5f254046ceedfbdddb274ef8990d # change it to your own registry
      resources:
        limits:
          memory: 512Mi
          cpu: 400m
      env:
        - name: GIT_USER
          value: sltang
        - name: GIT_REPO
          value: jenkins-x-test
        - name: POD_IP
          valueFrom: 
            fieldRef: 
              fieldPath: status.podIP
      volumeMounts:
        - name: build-pv
          mountPath: /mnt/data
      imagePullSecrets:
        - name: regcred
    volumes:
      - name: build-pv
        persistentVolumeClaim:
          claimName: build-pv-claim

  - name: integration-test-service
    resource:
      action: apply
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: integration-test
          namespace: argo-test
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          selector:
            app: integration-test
          ports:
          - protocol: TCP
            port: 80
            targetPort: 8080

  - name: myapp-service
    resource:
      action: apply
      manifest: |
        apiVersion: v1
        kind: Service
        metadata:
          name: myapp
          namespace: argo-test
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          selector:
            app: myapp
          ports:
          - protocol: TCP
            port: 80
            targetPort: 3000
  
  
  